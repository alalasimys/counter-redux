{"version":3,"sources":["components/Counter/Controls.js","components/Counter/Value.js","redux/counter/counter-types.js","components/Counter/Couter.js","redux/counter/counter-actions.js","App.js","redux/counter/counter-reducer.js","redux/store.js","index.js"],"names":["Controls","step","onIncrement","onDecrement","className","type","onClick","Value","value","INCREMENT","DECREMENT","connect","counter","dispatch","payload","actions","App","counterReducer","combineReducers","state","rootReducer","store","createStore","composeWithDevTools","console","log","getState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gOAaeA,EAXE,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,YAAaC,EAAtB,EAAsBA,YAAtB,OACf,sBAAKC,UAAU,oBAAf,UACE,yBAAQC,KAAK,SAASC,QAASH,EAA/B,iFACgBF,KAEhB,yBAAQI,KAAK,SAASC,QAASJ,EAA/B,iFACgBD,SCJLM,EAFD,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OAAe,sBAAMJ,UAAU,iBAAhB,SAAkCI,KCFlDC,EAAY,oBACZC,EAAY,oB,MCmBzB,IASeC,eATS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,MAAkB,CACxCJ,MAAOI,EAAQJ,MACfP,KAAMW,EAAQX,SAGW,SAACY,GAAD,MAAe,CACxCX,YAAa,SAACM,GAAD,OAAWK,ECxBD,SAACL,GAAD,MAAY,CACnCH,KAAMI,EACNK,QAASN,GDsBwBO,CAAkBP,KACnDL,YAAa,SAACK,GAAD,OAAWK,ECpBD,SAACL,GAAD,MAAY,CACnCH,KAAMK,EACNI,QAASN,GDkBwBO,CAAkBP,QAEtCG,EAtBf,YAA6D,IAA1CH,EAAyC,EAAzCA,MAAOP,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,YAC3C,OACE,sBAAKC,UAAU,UAAf,UACE,cAAC,EAAD,CAAOI,MAAOA,IACd,cAAC,EAAD,CACEP,KAAMA,EACNC,YAAa,kBAAMA,EAAYD,IAC/BE,YAAa,kBAAMA,EAAYF,YERxBe,MAJf,WACE,OAAO,cAAC,EAAD,K,cCaIC,EAAiBC,0BAAgB,CAC5CV,MAdmB,WAAmC,IAAlCW,EAAiC,uDAAzB,EAAyB,yCAApBd,EAAoB,EAApBA,KAAMS,EAAc,EAAdA,QACvC,OAAQT,GACN,KAAKI,EACH,OAAOU,EAAQL,EACjB,KAAKJ,EACH,OAAOS,EAAQL,EACjB,QACE,OAAOK,IAQXlB,KAJkB,eAACkB,EAAD,uDAAS,EAAT,OAAuBA,KCVrCC,EAAcF,0BAAgB,CAClCN,QAASK,IAKII,EAFDC,sBAAYF,EAAaG,iCCDvCC,QAAQC,IAAIJ,EAAMK,YAElBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUR,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJS,SAASC,eAAe,W","file":"static/js/main.b9d4f0fc.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Controls = ({ step, onIncrement, onDecrement }) => (\n  <div className=\"Counter__controls\">\n    <button type=\"button\" onClick={onDecrement}>\n      Уменьшить на {step}\n    </button>\n    <button type=\"button\" onClick={onIncrement}>\n      Увеличить на {step}\n    </button>\n  </div>\n);\n\nexport default Controls;\n","import React from \"react\";\n\nconst Value = ({ value }) => <span className=\"Counter__value\">{value}</span>;\n\nexport default Value;\n","export const INCREMENT = \"counter/Increment\";\nexport const DECREMENT = \"counter/Decrement\";\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Controls from \"./Controls\";\nimport Value from \"./Value\";\nimport * as actions from \"../../redux/counter/counter-actions\";\nimport \"./Counter.css\";\n\nfunction Counter({ value, step, onIncrement, onDecrement }) {\n  return (\n    <div className=\"Counter\">\n      <Value value={value} />\n      <Controls\n        step={step}\n        onIncrement={() => onIncrement(step)}\n        onDecrement={() => onDecrement(step)}\n      />\n    </div>\n  );\n}\n\nconst mapStateToProps = ({ counter }) => ({\n  value: counter.value,\n  step: counter.step,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onIncrement: (value) => dispatch(actions.increment(value)),\n  onDecrement: (value) => dispatch(actions.decrement(value)),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(Counter);\n","import { INCREMENT, DECREMENT } from \"./counter-types\";\n\nexport const increment = (value) => ({\n  type: INCREMENT,\n  payload: value,\n});\n\nexport const decrement = (value) => ({\n  type: DECREMENT,\n  payload: value,\n});\n","import Counter from \"./components/Counter\";\n\nfunction App() {\n  return <Counter />;\n}\n\nexport default App;\n","import { combineReducers } from \"redux\";\nimport { INCREMENT, DECREMENT } from \"./counter-types\";\n\nconst valueReducer = (state = 0, { type, payload }) => {\n  switch (type) {\n    case INCREMENT:\n      return state + payload;\n    case DECREMENT:\n      return state - payload;\n    default:\n      return state;\n  }\n};\n\nconst stepReducer = (state = 1, action) => state;\n\nexport const counterReducer = combineReducers({\n  value: valueReducer,\n  step: stepReducer,\n});\n","import { combineReducers, createStore } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { counterReducer } from \"./counter/counter-reducer\";\n\nconst rootReducer = combineReducers({\n  counter: counterReducer,\n});\n\nconst store = createStore(rootReducer, composeWithDevTools());\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\n\nconsole.log(store.getState());\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}